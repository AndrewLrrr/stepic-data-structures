import unittest

from module4.task5_rope import Rope


class TestRope(unittest.TestCase):
    def test_add_and_find(self):
        rope = Rope.add('helloworld')
        self.assertEqual('h', Rope.find(0, rope))
        self.assertEqual('l', Rope.find(8, rope))
        self.assertEqual('d', Rope.find(9, rope))
        self.assertEqual('w', Rope.find(5, rope))
        self.assertEqual('l', Rope.find(2, rope))
        self.assertEqual('l', Rope.find(3, rope))
        self.assertEqual('e', Rope.find(1, rope))
        self.assertEqual('o', Rope.find(4, rope))
        self.assertEqual('o', Rope.find(6, rope))
        self.assertEqual('r', Rope.find(7, rope))

    def test_merge(self):
        rope = Rope.add('hello')
        rope2 = Rope.add('world')
        self.assertEqual('hello', Rope.to_string(rope))
        self.assertEqual('world', Rope.to_string(rope2))
        rope = Rope.merge(rope, rope2)
        self.assertEqual('helloworld', Rope.to_string(rope))
        rope3 = Rope.add('prefix')
        rope = Rope.merge(rope3, rope)
        self.assertEqual('prefixhelloworld', Rope.to_string(rope))
        rope4 = Rope.add('postfix')
        rope = Rope.merge(rope, rope4)
        self.assertEqual('prefixhelloworldpostfix', Rope.to_string(rope))
        self.assertEqual('p', Rope.find(0, rope))
        self.assertEqual('l', Rope.find(9, rope))
        self.assertEqual('x', Rope.find(22, rope))

    def test_split(self):
        string = 'helloworld'
        rope = Rope.add(string)
        rope, rest = Rope.split(5, rope)
        self.assertEqual('hello', Rope.to_string(rope))
        self.assertEqual('world', Rope.to_string(rest))
        rope = Rope.add(string)
        rope, rest = Rope.split(8, rope)
        self.assertEqual('hellowor', Rope.to_string(rope))
        self.assertEqual('ld', Rope.to_string(rest))
        rope = Rope.add(string)
        rope, rest = Rope.split(9, rope)
        self.assertEqual('helloworl', Rope.to_string(rope))
        self.assertEqual('d', Rope.to_string(rest))
        rope = Rope.add(string)
        rope, rest = Rope.split(2, rope)
        self.assertEqual('he', Rope.to_string(rope))
        self.assertEqual('lloworld', Rope.to_string(rest))
        rope = Rope.add(string)
        rope, rest = Rope.split(1, rope)
        self.assertEqual('h', Rope.to_string(rope))
        self.assertEqual('elloworld', Rope.to_string(rest))
        rope = Rope.add(string)
        rope, rest = Rope.split(0, rope)
        self.assertEqual('', Rope.to_string(rope))
        self.assertEqual('helloworld', Rope.to_string(rest))
        self.assertEqual('h', Rope.find(0, rest))
        self.assertEqual('d', Rope.find(9, rest))
        self.assertEqual('o', Rope.find(4, rest))
        rope = Rope.add(string)
        rope, rest = Rope.split(10, rope)
        self.assertEqual('helloworld', Rope.to_string(rope))
        self.assertEqual('', Rope.to_string(rest))
        self.assertEqual('h', Rope.find(0, rope))
        self.assertEqual('d', Rope.find(9, rope))
        self.assertEqual('o', Rope.find(4, rope))

    def test_insert(self):
        string = 'hello'
        rope = Rope.add(string)
        ins = Rope.add('w')
        rope = Rope.insert(6, rope, ins)
        self.assertEqual('hellow', Rope.to_string(rope))
        ins = Rope.add('n')
        rope = Rope.insert(2, rope, ins)
        self.assertEqual('henllow', Rope.to_string(rope))
        ins = Rope.add('abc')
        rope = Rope.insert(5, rope, ins)
        self.assertEqual('henllabcow', Rope.to_string(rope))
        ins = Rope.add('fff')
        rope = Rope.insert(0, rope, ins)
        self.assertEqual('fffhenllabcow', Rope.to_string(rope))

    def test_reorder(self):
        rope = Rope.add('hlelowrold')
        rope = Rope.reorder(1, 1, 2, rope)
        self.assertEqual('hellowrold', Rope.to_string(rope))
        rope = Rope.reorder(6, 6, 7, rope)
        self.assertEqual('helloworld', Rope.to_string(rope))
        rope = Rope.reorder(0, 0, 9, rope)
        self.assertEqual('elloworldh', Rope.to_string(rope))
        rope = Rope.reorder(9, 9, 0, rope)
        self.assertEqual('helloworld', Rope.to_string(rope))
        rope = Rope.reorder(0, 4, 5, rope)
        self.assertEqual('worldhello', Rope.to_string(rope))
        rope = Rope.reorder(0, 12, 0, rope)
        self.assertEqual('worldhello', Rope.to_string(rope))
