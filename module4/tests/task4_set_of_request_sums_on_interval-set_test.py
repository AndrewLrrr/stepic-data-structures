import unittest

from module4.task4_set_of_request_sums_on_interval import IntervalSet


class TestIntervalSet(unittest.TestCase):
    def test1(self):
        i_set = IntervalSet()
        self.assertEqual('Not found', i_set.find(1))
        i_set.add(1)
        self.assertEqual('Found', i_set.find(1))
        i_set.add(2)
        self.assertEqual(3, i_set.sum(1, 2))
        i_set.add(1000000000)
        self.assertEqual('Found', i_set.find(1000000000))
        i_set.remove(1000000000)
        self.assertEqual('Not found', i_set.find(1000000000))
        self.assertEqual(1, i_set.sum(999999999, 1000000000))
        i_set.remove(2)
        self.assertEqual('Not found', i_set.find(2))
        i_set.remove(0)
        i_set.add(9)
        self.assertEqual(10, i_set.sum(0, 9))

    def test2(self):
        i_set = IntervalSet()
        self.assertEqual('Not found', i_set.find(0))
        i_set.add(0)
        self.assertEqual('Found', i_set.find(0))
        i_set.remove(0)
        self.assertEqual('Not found', i_set.find(0))

    def test3(self):
        i_set = IntervalSet()
        i_set.add(491572259)
        self.assertEqual('Found', i_set.find(491572259))
        self.assertEqual('Not found', i_set.find(899375874))
        self.assertEqual(491572259, i_set.sum(310971296, 877523306))
        i_set.add(352411209)

    def test4(self):
        commands = ['10', '+ 0', '+ 1', '+ 2', '+ 3', '+ 4', 's 0 5', 's 999999994 999999994', 's 999999999 2',
                    's 999999995 999999996', 's 999999999 1']

        expected = ['10', '3', '10', '4', '9']

        self.assertCommands(commands, expected)

    def test5(self):
        commands = ['s 40279559 89162572', '- 774613289', 's 869592654 915517087', '- 165280355', '- 776346290',
                    '- 221187096', 's 421986248 742826969', 's 83228103 852190011', '- 640319482', '? 528689193',
                    '? 75245219', '- 617070033', '+ 66257759', 's 25751289 70170547', 's 28248247 617849094',
                    '- 954357244', '+ 477444954', '? 608389416', 's 400483980 423330836', '- 477444954', '? 441393551',
                    's 66257759 66257759', '- 822218158', '? 806479414', 's 548665149 925635534', 's 66257759 66257759',
                    '? 234121006', '+ 663305907', 's 314809050 685231317', '- 0', 's 487458874 602635501',
                    's 66257759 66257759', '? 918193520', '? 606474691', 's 188185089 774086933', '- 322445571',
                    's 66257759 66257759', '- 814123984', 's 0 0', 's 0 0', 's 689260392 827869844', '? 204276815',
                    '- 66257759', '? 488766408', 's 412617563 631410280', '- 463415495', '+ 601030115', '? 776513589',
                    's 257003372 887483600', '+ 154047223', '? 154047223', '? 219327735', '+ 978812473',
                    's 978812473 154047223', '? 718062555', '? 128066784', '- 15718305', '? 754978417',
                    's 643892549 819127300', '? 192401474', '? 643892549', '+ 638898307', '? 973173529', '+ 506709268',
                    '- 506709268', '+ 744166533', '- 638898307', '+ 95240753', 's 997348833 63778002', '? 31190791',
                    's 21011834 570648768', '+ 217208615', '+ 401912531', 's 0 723886547', '? 251082460', '+ 542593404',
                    's 702430665 542593404', '? 48285749', 's 831077135 671239874', '+ 917941607', '? 908494561',
                    '? 671239874', 's 333354822 490605331', '+ 261522346', 's 170201520 10364259', '- 139162050',
                    '- 677374727', '? 992422786', '? 500171144', '- 239436034', '+ 556867643', '? 992422786',
                    '+ 720003678', 's 220110584 268880636', 's 31190791 997548180', 's 898610232 383552107',
                    '- 682670734', '+ 547596765', 's 496810115 875859347', '? 41728941']

        expected = ['0', '0', '0', '0', 'Not found', 'Not found', '66257759', '0', 'Not found', '0', 'Not found',
                    '66257759', 'Not found', '0', '66257759', 'Not found', '729563666', '0', '66257759', 'Not found',
                    'Not found', '0', '66257759', '66257759', '66257759', '0', 'Not found', 'Not found', '0',
                    'Not found', '601030115', 'Found', 'Not found', '1935950040', 'Not found', 'Not found', 'Not found',
                    '1935950040', 'Not found', 'Found', 'Not found', '0', 'Found', '31190791', '3328760130', 'Found',
                    '4200113661', 'Found', '4200113661', 'Not found', 'Found', '1860989273', '4440680541', 'Found',
                    'Not found', 'Found', '0', '4220898514', '1565728674', '829624590', 'Found']

        self.assertCommands(commands, expected)

    def test6(self):
        commands = ['100', 's 289374071 373684689', 's 375755541 566250848', '+ 194850292', 's 413391693 787886057',
                    's 194850292 194850292', '+ 605198187', 's 0 605198187', 's 96415354 714522867', 's 0 605198187',
                    's 199951522 805149709', '+ 282123593', '+ 411741967', '+ 281637509', 's 707882589 919355585',
                    '+ 219881488', '+ 961828096', 's 752723584 894423048', '+ 479740347', 's 203639903 911840258',
                    's 255317117 855525111', 's 18065190 798183703', 's 803284933 583403445', '+ 165832127',
                    '+ 650148521', '+ 60091609', 's 803284933 650148521', '+ 930335472', 's 368162345 134244273',
                    's 624219679 471083267', '+ 67233133', 's 604289713 451153301', '+ 985919897', '+ 147802635',
                    's 306036626 600351192', 's 436321199 713359931', 's 928538150 793041720', '+ 968622920',
                    's 190666515 55170085', 's 392780145 257283715', '+ 134705765', '+ 131822692', '+ 417995945',
                    's 502711739 292946646', '+ 47308157', '+ 649818769', '+ 509231217', 's 938198287 802701857',
                    's 375253098 239756668', '+ 549191024', 's 485628136 56803790', '+ 719113972', '+ 326254388',
                    's 362635080 676928956', 's 70565764 635444536', 's 768231891 702111753', 's 21718516 148472050',
                    '+ 396745427', 's 524814213 204910556', 's 119840673 322395927', '+ 824277482',
                    's 741724087 675603949', '+ 27903075', 's 415664716 349544578', 's 783496391 717376253',
                    '+ 169403302', 's 783496391 717376253', 's 691848298 720384517', 's 19929966 953809829',
                    '+ 179870705', 's 440231616 788716892', '+ 254413655', '+ 952249326', '+ 675798013', '+ 454653780',
                    's 19456530 34562404', 's 652660587 875023947', '+ 424662122', '+ 874782058',
                    's 987164289 203660634', 's 37837776 373072096', 's 182032288 319629503', '+ 372338401',
                    '+ 699911572', 's 795962016 840004318', 's 683071452 543245427', 's 198287948 132167810',
                    's 84703961 18583823', 's 226208996 456648359', '+ 511052247', '+ 936582090',
                    's 875351943 809231805', '+ 791538840', 's 347913578 281793440', 's 900833651 861109507',
                    's 118199039 379807364', '+ 894771171', 's 827754529 272379039', '+ 324735926',
                    's 587569088 847428302', '+ 506134173', '+ 506134173']

        expected = ['0', '0', '0', '194850292', '994898771', '194850292', '994898771', '994898771', '800048479', '0',
                    '3001864779', '3001864779', '3216645037', '3216645037', '4742652396', '5395710293', '5415640259',
                    '5898513646', '2582026917', '1091391818', '6829263458', '7627149829', '7627149829', '9081731689',
                    '10644676879', '10644676879', '4234695861', '7036404929', '4251698080', '12353304845', '1751731632',
                    '11447618538', '4278205884', '12604265263', '13236433589', '13236433589', '13642270467', '0',
                    '13642270467', '2793968500', '822141159', '3419683065', '2584293386', '11035087250', '1373382681',
                    '388718184', '16821642035', '17935226023', '17935226023', '2144578026', '18672016407',
                    '19135571635', '19115641669', '4464272929', '7588649513', '3316099736']

        self.assertCommands(commands, expected)

    def assertCommands(self, commands, expected):
        counter = 0
        i_set = IntervalSet()
        for inp in commands:
            if inp.startswith('+'):
                _, number = inp.split()
                i_set.add(int(number))
            elif inp.startswith('-'):
                _, number = inp.split()
                i_set.remove(int(number))
            elif inp.startswith('?'):
                _, number = inp.split()
                self.assertEqual(expected[counter], i_set.find(int(number)))
                counter += 1
            elif inp.startswith('s'):
                _, l, r = inp.split()
                self.assertEqual(int(expected[counter]), i_set.sum(int(l), int(r)))
                counter += 1
